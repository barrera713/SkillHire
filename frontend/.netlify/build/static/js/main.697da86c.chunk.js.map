{"version":3,"sources":["ExpertiseForm.js","actions/expertiseActions.js","actions/types.js","history.js","ReviewForm.js","actions/reviewActions.js","Default.js","LoginPage.js","actions/homepageActions.js","actions/ProfileActions.js","NavBar.js","actions/userActions.js","actions/contractorActions.js","actions/NavBarActions.js","Capitalize.js","ContractorCollection.js","ContractorProfile.js","App.js","serviceWorker.js","reducers/usersReducer.js","reducers/contractorsReducer.js","reducers/reviewReducer.js","reducers/homepageReducer.js","reducers/NavBarReducer.js","reducers/ProfilePageReducer.js","reducers/index.js","store.js","index.js"],"names":["ExpertiseForm","handleSubmit","e","preventDefault","formData","target","value","props","createSkill","window","location","seller","id","name","this","setState","state","console","log","className","Form","onSubmit","Header","as","Input","placeholder","type","Button","content","primary","React","Component","connect","current_user","dispatch","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","data","json","skill","payload","createBrowserHistory","ReviewForm","rating","createReview","nextValue","prevValue","onChange","handleChange","starCount","onStarClick","contractors","reviews","profileData","token","res","review","alert","history","push","Default","HomePage","loginData","userLogin","Container","positive","info","user","setItem","auth_token","profile","contractor","NavBar","activeItem","userSignUp","contractorSignUp","userData","createUser","closeUserModal","contractorSubmit","contractorData","createContractor","closeContractorModal","handleUserModal","handleHome","handleBrowse","handleContractorModal","searchChange","searchTerm","clear","Segment","inverted","Menu","pointing","secondary","Item","active","onClick","includes","pathname","position","icon","logOut","Modal","open","onClose","Content","Label","fluid","label","capitalize","word","toLowerCase","split","map","i","toUpperCase","slice","join","ContractorCollection","handleClick","contractorProfile","fetchContractors","term","nameCard","sellers","filter","contractor_skills","expertise","length","Card","image","header","magic","meta","description","city","Grid","Column","relaxed","columns","ContractorProfile","match","params","sellerData","sellerSkill","skills","reviewList","userCard","src","alt","email","App","exact","path","component","LoginPage","Boolean","hostname","initialState","users","newReview","contractor_id","user_id","username","photographer","developer","designer","videoeditor","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.697da86c.chunk.js","sourcesContent":["import React from 'react';\nimport { Form, Header, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { createSkill } from './actions/expertiseActions';\n\n\n\nclass ExpertiseForm extends React.Component {\n\n   \n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const formData = {\n            \"expertise\": e.target[\"expertise\"].value,\n            \"description\": e.target[\"description\"].value\n        }\n        this.props.createSkill(formData)  \n        window.location = `/profile/${this.props.seller.id}`\n    }\n\n    handleTrueFalse(e) {\n        e.preventDefault()\n        let { name } = e.target;\n        this.setState({\n            [name]: !this.state[name]\n        })\n    }\n\n\n    render() {\n\n        console.log('wutt this', this.props.seller.id)\n        return (\n            <div className=\"login-background\">\n                <Form className=\"skill-form\" onSubmit={ (e) => this.handleSubmit(e)}>\n                    <div>\n                        <Header as='h3' className=\"about-skill\">How would you like to market yourself?</Header>\n                        <Form.Input name=\"expertise\" placeholder=\"Skill\" type=\"text\" />\n                    </div>\n                    <div>\n                        <Header as='h3'>About</Header>\n                        <Form.Input name=\"description\" placeholder=\"Tell us about your experience\" type=\"text\" />\n                    </div>\n                    <Button className=\"skill-button\" type=\"submit\" content='Confirm' primary />\n                </Form>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    seller: state.current_user.current_user\n})\n\nexport default connect(mapStateToProps, { createSkill })(ExpertiseForm)","import { NEW_SKILL} from './types';\n\nconst API = \"https://mighty-ridge-68327.herokuapp.com\";\n\n\nexport const createSkill = (formData) => dispatch => {\n    fetch(`${API}/expertise`, {\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(formData)\n    })\n    .then( data => data.json())\n    .then( skill => dispatch({\n        type: NEW_SKILL,\n        payload: skill\n        })\n    )\n}\n","export const NEW_USER = 'NEW USER';\n\nexport const NEW_CONTRACTOR = 'NEW CONTRACTOR';\n\nexport const PROFILE_PAGE = 'PROFILE PAGE';\n\nexport const FETCH_CONTRACTORS = 'FETCH CONTRACTORS';\n\nexport const NEW_SKILL = 'NEW SKILL'; \n\nexport const NEW_REVIEW = 'NEW REVIEW';\n\nexport const CURRENT_USER = 'THIS USER';\n\nexport const SEARCH_TERM = 'SEARCH TERM';\n\n","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory(); ","import React from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\nimport { connect } from 'react-redux';\nimport { createReview } from './actions/reviewActions';\nimport { Button, Form } from 'semantic-ui-react'\n\n\nclass ReviewForm extends React.Component {\n    \n    state = {\n        rating: 1\n    }\n    \n    onStarClick(nextValue, prevValue, name) {\n        this.setState({\n            rating: nextValue\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const content = {\n            \"content\": e.target[\"content\"].value,\n            rating: this.state.rating,\n        }\n        this.props.createReview(content, this.props.id)\n        console.log('inside handleSubmit in ReviewForm', content, this.props.id)\n        \n        \n    }\n\n    render() {\n        const { rating } = this.state;\n        return (\n            <div className=\"review-form\">\n                <Form onSubmit={(e) => this.handleSubmit(e)}>\n                    <div>\n                        <h3 className=\"raulplz\">Leave a review</h3>\n                       \n                        <Form.Input name=\"content\" type=\"text\" onChange={this.handleChange}/>\n                    </div>\n                    <div>\n                        <StarRatingComponent\n                        name=\"rate1\"\n                        starCount={5}\n                        value={rating}\n                        onStarClick={ (e) => this.onStarClick(e)}\n                        />\n                    </div>\n                    <Button>Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    data: state.contractors.contractors,\n    reviews: state.reviews,\n    id: state.profileData.data.id\n})\n\n\nexport default connect(mapStateToProps, { createReview })( ReviewForm )","import { NEW_REVIEW } from './types'\nimport history from '../history';\n\nconst API = \"https://mighty-ridge-68327.herokuapp.com\";\n\n\n\nexport const createReview = (content, id) => dispatch => {\n    console.log('inside review action', content, id) \n    if(localStorage.token && localStorage.token !== \"undefined\")\n    fetch(`${API}/review/new/${id}`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(content)\n    })\n    .then(res => res.json())\n    .then(review => dispatch({\n        type: NEW_REVIEW,\n        payload: review\n    }))\n    else {\n        window.alert(\"Only clients can submit reviews\")\n        history.push('/')\n    }\n}\n\n","import React, { Component } from 'react'\n\nexport default class Default extends Component {\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                <div className=\"col-10 mx-auto text-center text-title text-uppercase pt-5\">\n                    <h1 className=\"display-3\">404</h1>\n                    <h1>error</h1>\n                    <h2>page not found</h2>\n                    <h3>the requested URL was not found</h3>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { userLogin } from './actions/homepageActions';\nimport { Button, Form, Container } from 'semantic-ui-react';\nimport history from './history';\n\n\n\n\n\nclass HomePage extends React.Component {\n    \n\n\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const loginData = {\n            \"username\": e.target[\"username\"].value,\n            \"password\": e.target[\"password\"].value\n        }\n        this.props.userLogin(loginData)\n        history.push('/freelancers')\n    }\n\n    render() {\n        return (\n            <div className=\"login-background\">\n                <Container className=\"form-background\">\n                    <Form onSubmit = {this.handleSubmit} className=\"form\">\n                        <h2>Username</h2>\n                        <Form.Input name=\"username\" placeholder=\"username\" type=\"text\" />\n                        <h2>Password</h2>\n                        <Form.Input name=\"password\" placeholder=\"password\" type=\"password\" />\n                        <Button positive>Sign In</Button>\n                    </Form>\n                </Container>\n            </div>\n        )\n    }\n\n}\n\nexport default connect(null, { userLogin })(HomePage)\n","import { CURRENT_USER } from './types'\n\nconst API = \"https://mighty-ridge-68327.herokuapp.com\";\n\n\nexport const userLogin = (info) => dispatch => {\n    fetch(`${API}/login`, {\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(info) \n    })\n    .then(res => res.json())\n    .then( user => localStorage.setItem('token', user.auth_token))\n    .then( () => {\n        fetch(`${API}/current/user`, {\n            method: 'GET',\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n        .then( res => res.json())\n        .then( current_user => dispatch({\n            type: CURRENT_USER,\n            payload: current_user\n        }))\n\n    })\n\n}","import { PROFILE_PAGE } from './types';\nimport  history from '../history'\n\nconst API = \"https://mighty-ridge-68327.herokuapp.com\";\n\n\nexport const profile = (id) => dispatch => {\n    console.log('fetching seller profile id:', id)\n    if(localStorage.token && localStorage.token !== \"undefined\")\n    fetch(`${API}/profile/${id}`, {\n        method: 'GET', \n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    })\n    .then(res => res.json())\n    .then(contractor => dispatch({\n        type: PROFILE_PAGE, \n        payload: contractor\n    }))\n    else {\n        window.alert(\"Must be login to view seller profile\")\n        history.push('/')\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from './actions/userActions';\nimport { createContractor } from './actions/contractorActions'\nimport { searchTerm } from './actions/NavBarActions';\nimport { Menu, Segment, Modal, Button, Form, Label, Input } from 'semantic-ui-react';\nimport history from './history'\nimport { profile } from './actions/ProfileActions';\n\n\n\nclass NavBar extends Component {\n\n\n    state = { \n        activeItem: 'home',\n        userSignUp: false,\n        contractorSignUp: false\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault()\n        const userData = {\n            \"name\": e.target[\"name\"].value,\n            \"username\": e.target[\"username\"].value,\n            \"password\": e.target[\"password\"].value,\n            \"city\": e.target[\"city\"].value,\n            \"state\": e.target[\"state\"].value\n        };\n        this.props.createUser(userData)\n        this.closeUserModal(e)\n    }\n\n    contractorSubmit = (e) => {\n        e.preventDefault()\n        const contractorData = {\n            \"profile_pic\": e.target[\"name\"].value,\n            \"name\": e.target[\"name\"].value,\n            \"username\": e.target[\"username\"].value,\n            \"password\": e.target[\"password\"].value,\n            \"email\": e.target[\"email\"].value,\n            \"city\": e.target[\"city\"].value,\n            \"state\": e.target[\"state\"].value\n        };\n        this.props.createContractor(contractorData)\n        this.closeContractorModal(e)\n    }\n\n    handleUserModal = (e, { name }) => this.setState({ \n        activeItem: name,\n        userSignUp: true\n    })\n\n    closeUserModal = (e) => {\n        this.setState({ userSignUp: !this.state.userSignUp })\n    }\n\n    handleHome = (e) => {\n        this.setState({\n            activeItem: 'login'\n        })\n        history.push('/')\n    }\n\n    handleBrowse = (e, { name }) => {\n        this.setState({\n            activeItem: name\n        })\n        window.location = '/freelancers'\n    }\n\n    handleContractorModal = (e, { name }) => this.setState({ \n        activeItem: name,\n        contractorSignUp: true\n    })\n\n    closeContractorModal = (e) => {\n        this.setState({ contractorSignUp: !this.state.contractorSignUp })\n    }\n\n    searchChange = (e) => {\n        e.preventDefault()\n      this.props.searchTerm(e.target.value)\n      console.log(e.target.value)\n      history.push('/freelancers')\n    }\n    \n    logOut() {\n        localStorage.clear()\n        history.push('/')\n    }\n\n\n\n    render() {        \n\n        const { activeItem } = this.state\n      \n        return (\n             <Segment inverted className=\"navbar\">\n                <Menu inverted pointing secondary>\n                    <Menu.Item name='login' active={activeItem === 'login'} onClick={this.handleHome}/>\n                    <Menu.Item name='client sign up' active={activeItem === 'client sign up'} onClick={this.handleUserModal}/>\n                    <Menu.Item name='seller sign up' active={activeItem === 'contractor sign up'} onClick={this.handleContractorModal}/>\n                    {['/freelancers', '/profile/:id'].includes(history.location.pathname) ? null :\n                    <Menu.Item name='browse' active={activeItem === 'browse'} onClick={this.handleBrowse}/>\n                    }\n                    <Menu.Menu position='right'>\n                        <Menu.Item>\n                        {['/freelancers'].includes(history.location.pathname) ? \n                            <Input icon='search' placeholder=\"Search...\" onChange={ (e) => this.searchChange(e)}/>\n                            : null }\n                        </Menu.Item>\n                        <Menu.Item name=\"log out\" onClick={this.logOut} > \n                        </Menu.Item>\n                    </Menu.Menu>\n                </Menu>\n                <Modal open={this.state.userSignUp} onClose={this.closeUserModal} >\n                        <Modal.Content className=\"content-background\">\n                            <Form onSubmit={ (e) => this.handleSubmit(e)} className=\"user-form\">\n                                <Label>Name</Label>\n                                <Form.Input fluid Label name=\"name\" placeholder=\"Full Name\" type=\"text\" />\n                                <Label>Username</Label>\n                                <Form.Input fluid Label name=\"username\" placeholder=\"username\" type=\"text\" />\n                                <Label>Password</Label>\n                                <Form.Input fluid Label name=\"password\" placeholder=\"password\" type=\"password\" />\n                                <Label>City</Label>\n                                <Form.Input fluid Label name=\"city\" placeholder=\"city\" type=\"text\" />\n                                <Label>State</Label>\n                                <Form.Input fluid label name=\"state\" placeholder=\"state\" type=\"text\" />\n                                <Button className=\"form-button\" >Confirm</Button >\n                            </Form>\n                        </Modal.Content>\n                    </Modal>\n                    <Modal open={this.state.contractorSignUp} onClose={this.closeContractorModal}>\n                        <Modal.Content className=\"content-background\">\n                            <Form onSubmit={ (e) => this.contractorSubmit(e)}>\n                            <Label>Name</Label>\n                            <Form.Input name=\"name\" placeholder=\"name\" type=\"text\"  />\n                            <Label>Last Name</Label>\n                            <Form.Input name=\"username\" placeholder=\"username\" type=\"text\"  />\n                            <Label>Password</Label>\n                            <Form.Input name=\"password\" placeholder=\"password\" type=\"password\"  />\n                            <Label>Email</Label>\n                            <Form.Input name=\"email\" placeholder=\"email\" type=\"email\"  />\n                            <Label>City</Label>\n                            <Form.Input name=\"city\" placeholder=\"city\" type=\"text\"  />\n                            <Label>State</Label>\n                            <Form.Input name=\"state\" placeholder=\"state\" type=\"text\"  />\n                            <Button className=\"submit-btn\">Confirm</Button>\n                        </Form>\n                        </Modal.Content>\n                    </Modal>\n            </Segment> \n        )\n    }\n}\n\nexport default connect(null, { createUser, createContractor, searchTerm, profile })(NavBar);\n\n","import { NEW_USER } from './types';\nconst API = \"https://mighty-ridge-68327.herokuapp.com\";\n\n\nexport const createUser = (userData) => dispatch => {\n    fetch(`${API}/join`, {\n        method: 'POST', \n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n    })\n    .then(res => res.json())\n    .then(user => dispatch({\n        type: NEW_USER,\n        payload: user \n    }))\n    console.log('user created')\n}\n\n\n","import { FETCH_CONTRACTORS, NEW_CONTRACTOR, CURRENT_USER } from './types';\nimport history from '../history';\n\nconst API = \"https://mighty-ridge-68327.herokuapp.com\";\n\n\nexport const fetchContractors = () => dispatch => {\n    fetch(`${API}/freelancers`, {\n        method: 'GET',\n        headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n    })\n    .then( res => res.json())\n    .then(contractors => dispatch({\n        type: FETCH_CONTRACTORS,\n        payload: contractors\n    }));\n}\n\nexport const createContractor = (contractorData ) => dispatch => {\n    fetch(`${API}/start-earning`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(contractorData)\n    })\n    .then( res => res.json())\n    .then( contractor => dispatch({\n        type: NEW_CONTRACTOR,\n        payload: contractor\n    }))\n    .then(() => {\n        fetch(`${API}/login`, {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(contractorData)\n        })\n        .then( res => res.json())\n        .then( user => {\n            localStorage.setItem('token', user.auth_token)\n            fetch('/current/user', {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n            .then( res => res.json())\n            .then( current_user => dispatch({\n                type: CURRENT_USER,\n                payload: current_user\n            }))\n        \n        })\n    })\n    history.push('/expertise')\n    \n}\n\n\n\n\n","import { SEARCH_TERM } from './types';\n\nexport const searchTerm = (value) => dispatch => {\n    dispatch({\n        type: SEARCH_TERM,\n        payload: value\n    })\n}"," const capitalize = (word) =>  {\n    if (word !== '') {\n        return word.toLowerCase().split(' ').map( i =>  i[0].toUpperCase() + i.slice(1)).join(' ')\n    }\n}\n\n\n export default capitalize;\n\n\n","import React from 'react'\nimport { Card, Grid, Container } from 'semantic-ui-react';\nimport { fetchContractors } from './actions/contractorActions';\nimport { profile } from './actions/ProfileActions';\nimport { connect } from 'react-redux';\nimport magic from './Capitalize';\nimport history from './history';\n\n\n\n\nclass ContractorCollection extends React.Component { \n    \n    componentDidMount() {\n        this.props.fetchContractors();\n    }\n\n    handleClick = () => {\n        history.push('./review/new')\n    }\n\n    contractorProfile = (id) => {\n        // this.props.profile(id)\n        history.push(`/profile/${id}`);\n    }\n    \n    render() {\n        \n        const searchTerm = this.props.term\n        \n\n        //matches searchterm to name\n        let nameMatchesFilter = name => name.toLowerCase().includes(searchTerm.searchTerm.toLowerCase()) \n\n        //matches searchTerm to skill\n        let skillsMatchFilter = skills => {\n            let matchedSkills = skills.filter( i => {\n                return i.expertise.toLowerCase().includes(searchTerm.searchTerm.toLowerCase())\n            })\n            return matchedSkills.length > 0 ? true : false\n        }\n\n        // matches searchTerm to name or skill \n        let searchName = this.props.sellers.filter(seller => { \n            return nameMatchesFilter(seller.contractor.name) || skillsMatchFilter(seller.contractor_skills)\n        }) \n    \n        \n\n        let nameCard = searchName.map(i => {\n            return i.contractor_skills.map( skill => {\n                return <Card\n                className='seller-card'\n                onClick = { () => this.contractorProfile(i.contractor.id)}\n                image='https://www.pngkey.com/png/detail/115-1150152_default-profile-picture-avatar-png-green.png'\n                header={magic(i.contractor.name)}\n                meta={magic(skill.expertise)}\n                description={`${magic(i.contractor.city)}, ${magic(i.contractor.state)}`}\n                />\n            })\n        })\n            \n\n\n        const sellers = this.props.sellers.map(i => { \n            return i.contractor_skills.map( skill => { \n                return <Card\n                    onClick = { () => this.contractorProfile(i.contractor.id)}\n                    image='https://www.pngkey.com/png/detail/115-1150152_default-profile-picture-avatar-png-green.png'\n                    header={magic(i.contractor.name)}\n                    meta={magic(skill.expertise)}\n                    // extra={skill.description}\n                    description={`${magic(i.contractor.city)}, ${magic(i.contractor.state)}`}\n                />\n            })\n        })\n\n\n        \n    \n        return (\n        <div className=\"collection-background\">\n        {!!searchTerm.searchTerm && searchTerm.searchTerm.length > 0 ? \n            <Container>\n               <Grid.Column relaxed columns={4}>\n                  {nameCard}\n                </Grid.Column>\n            </Container>\n            :\n            <Container>\n                <Grid relaxed columns={4}>\n                    {sellers.map(i => {\n                        return <Grid.Column>\n                            {i}\n                        </Grid.Column>\n                    })}\n                </Grid>\n            </Container> \n        }\n        </div>\n        )\n    }\n}\n\n\n\n\n\nconst mapStateToProps = state => ({\n    sellers: state.contractors.contractors,\n    term: state.searchTerm\n})\n  \nexport default connect(mapStateToProps, { fetchContractors, profile })(ContractorCollection)","import React from 'react';\nimport { connect } from 'react-redux';\n// import { createReview } from './actions/reviewActions';\nimport { profile } from './actions/ProfileActions';\nimport ReviewForm from './ReviewForm';\nimport capitalize from './Capitalize';\nimport StarRatingComponent from 'react-star-rating-component';\n\n\nclass ContractorProfile extends React.Component {\n\n    \n    componentDidMount() {\n        this.props.profile(this.props.match.params.id);\n    }\n    \n    \n    render() {\n        \n        let sellerData = this.props.contractor\n        // console.log('sellerData', sellerData)\n        let sellerSkill = sellerData.skills\n        // console.log(sellerSkill)\n        let sellerReviews = sellerData.reviews\n        // console.log(sellerReviews)\n\n        \n        \n        let reviewList = sellerReviews.map(i => {\n        return(<div>\n        <p>{capitalize(i.user.name)}: {i.content} </p>\n        <p><StarRatingComponent value={i.rating}/> </p>\n        <hr/>\n        </div>)\n        })\n        \n\n       \n        \n        let userCard = (<div className= 'seller'>\n                <div className= 'center-my-img'>\n            <img src='https://www.pngkey.com/png/detail/115-1150152_default-profile-picture-avatar-png-green.png' alt=\"\" className=\"profile-img\"/>\n                </div>\n                <h1>{capitalize(sellerData.name)}</h1>\n                <h3>{capitalize(sellerSkill[0].expertise)}</h3>\n                <p>{sellerSkill[0].description}</p>\n                <h3>{sellerData.email}</h3> \n                <hr/>\n                <p>{`${capitalize(sellerData.city)}, ${capitalize(sellerData.state)}`}</p>\n            </div>)\n\n\n\n        return(\n            <div className=\"main-div\">\n                <div>\n                    {userCard}\n                </div>\n                <div>\n                    <ReviewForm/>\n                    <div className=\"review-list\">\n                    {reviewList}\n                    </div>\n                </div>\n            </div>\n        )\n        \n    }   \n}\n\n        \nconst mapStateToProps = state => ({\n    contractor: state.profileData.data\n})\n\n\n\nexport default connect(mapStateToProps, { profile })(ContractorProfile)\n","import React from 'react';\nimport './App.css';\nimport ExpertiseForm from './ExpertiseForm'\nimport history from './history'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport ReviewForm from './ReviewForm'\nimport Default from './Default';\nimport LoginPage from './LoginPage';\nimport NavBar from './NavBar';\nimport ContractorCollection from './ContractorCollection';\nimport ContractorProfile from './ContractorProfile';\n\n\n\nfunction App() {\n  return (\n    <div>\n        <Router history={history}>\n          <NavBar/>\n          <Switch>\n            <Route exact path='/' component={LoginPage}></Route>\n            <Route exact path='/expertise' component={ExpertiseForm}></Route>\n            <Route exact path='/review/new' component={ReviewForm}></Route>\n            <Route exact path='/freelancers' component={ContractorCollection}></Route>\n            <Route exact path='/profile/:id' component={ContractorProfile}></Route>\n            <Route component={Default}></Route>\n          </Switch>\n      </Router>\n   </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { NEW_USER } from '../actions/types';\n\nconst initialState = {\n    users: []\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case NEW_USER:\n            return {\n                ...state,\n                user: action.payload\n            };\n        default: \n        return state;\n    }\n}","import { NEW_CONTRACTOR, FETCH_CONTRACTORS } from '../actions/types';\n\nconst initialState = {\n    contractors: [],\n    contractor: {},\n    searchTerm: ''\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case FETCH_CONTRACTORS:\n            return {\n                ...state,\n                contractors: action.payload\n            };\n        case NEW_CONTRACTOR:\n            return {\n                ...state,\n                contractor: action.payload\n            };\n        default: \n        return state;\n    }\n}\n","import { NEW_REVIEW } from '../actions/types';\n\nconst initialState = {\n    newReview: ''\n};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case NEW_REVIEW: \n        return {\n            ...state,\n            newReview: { \n                ...action.payload,\n                user: null // <- action.current_user,\n            }\n        };\n        default:\n        return state;\n    }\n}","import { CURRENT_USER } from '../actions/types';\n\nconst initialState = {\n    current_user: {}\n};\n\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case CURRENT_USER:\n            return {\n                ...state,\n                current_user: action.payload\n            };\n            default:\n            return state;\n    }\n}","import { SEARCH_TERM } from '../actions/types'\n\nconst initialState = {\n    searchTerm: ''\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case SEARCH_TERM:\n            return {\n                ...state,\n                searchTerm: action.payload\n            };\n        default:\n        return state;\n    }\n}","import { PROFILE_PAGE, NEW_REVIEW } from '../actions/types';\n\nconst initialState = {\n    data: { name: '', city: '', state: '', email: '', \n        reviews: [{ rating: 0, content: '', contractor_id: 0, user_id: 0, \n            user: { name: '', city: '', state: '', username: ''}\n        }],\n        skills: [{ id: 0, expertise: '', description: '', photographer: false, developer: false, designer: false, videoeditor: false }] \n    }\n};\n\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case PROFILE_PAGE:\n            return {\n                ...state.data,\n                data: action.payload\n            };   \n            case NEW_REVIEW: \n            console.log('ugabuga', action.payload)\n            return {\n                ...state,\n                data: {\n                    ...state.data,\n                    reviews: [...state.data.reviews, action.payload]\n                }\n            };\n        default: \n        return state;\n    }\n}\n\n","import { combineReducers } from 'redux';\nimport usersReducer from './usersReducer';\nimport contractorsReducer from './contractorsReducer';\nimport reviewReducer from './reviewReducer';\nimport homepageReducer from './homepageReducer';\nimport NavBarReducer from './NavBarReducer';\nimport ProfilePageReducer from './ProfilePageReducer';\n\nexport default combineReducers({\n    users: usersReducer,\n    contractors: contractorsReducer,\n    reviews: reviewReducer,\n    current_user: homepageReducer,\n    searchTerm: NavBarReducer,\n    profileData: ProfilePageReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers'\n\nconst initialState = {};\n \nconst middleware = [thunk]; \n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware), \n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'; \nimport { Provider } from 'react-redux'\n\n\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}